MODULE led VAR  current-in : {on_, off_};  led-state : {on_, off_};  _state : {nominal_};DEFINE  _broken := 0;INIT (_state = nominal_)TRANS ((_state = nominal_) -> (next(_state) = _state))INIT ((_state = nominal_) -> (led-state = current-in))TRANS ((next(_state) = nominal_) -> (next(led-state) = next(current-in)))MODULE cb VAR  cmd-in : {on_, off_, no-cmd_, reset_};  current-in : {on_, off_};  current-out : {on_, off_};  _state : {on_, off_, tripped_, blown_, unknown-cb-fault_};DEFINE  _fault-states := {tripped_, blown_, unknown-cb-fault_};  _broken := (_state in _fault-states);INIT (_state = on_)TRANS (((_state = on_) & (cmd-in = off_)) -> (next(_state) in (off_ union _fault-states)))TRANS (((_state = on_) & !(cmd-in = off_)) -> (next(_state) in (_state union _fault-states)))TRANS (((_state = off_) & (cmd-in = on_)) -> (next(_state) in (on_ union _fault-states)))TRANS (((_state = off_) & !(cmd-in = on_)) -> (next(_state) in (_state union _fault-states)))TRANS (((_state = tripped_) & (cmd-in = reset_)) -> (next(_state) in (off_ union _fault-states)))TRANS (((_state = tripped_) & !(cmd-in = reset_)) -> (next(_state) in (_state union _fault-states)))TRANS ((_state = blown_) -> (next(_state) in (_state union _fault-states)))TRANS ((_state = unknown-cb-fault_) -> (next(_state) in (_state union _fault-states)))INIT ((_state = on_) -> (current-in = current-out))TRANS ((next(_state) = on_) -> (next(current-in) = next(current-out)))INIT ((_state = off_) -> (current-out = off_))TRANS ((next(_state) = off_) -> (next(current-out) = off_))INIT ((_state = tripped_) -> (current-out = off_))TRANS ((next(_state) = tripped_) -> (next(current-out) = off_))INIT ((_state = blown_) -> (current-out = off_))TRANS ((next(_state) = blown_) -> (next(current-out) = off_))MODULE current-source VAR  current-out : {on_, off_};  _state : {nominal_};DEFINE  _broken := 0;INIT (_state = nominal_)TRANS ((_state = nominal_) -> (next(_state) = _state))INIT ((_state = nominal_) -> (current-out = on_))TRANS ((next(_state) = nominal_) -> (next(current-out) = on_))MODULE cb-model VAR-- STRUCTURE  led-1 : led;  led-2 : led;  led-3 : led;  led-4 : led;  cb-1 : cb;  cb-2 : cb;  cb-3 : cb;  cb-4 : cb;  cb-5 : cb;  cb-6 : cb;  cb-7 : cb;  source : current-source;DEFINE  _broken := source._broken | cb-7._broken | cb-6._broken | cb-5._broken | cb-4._broken | cb-3._broken | cb-2._broken | cb-1._broken | led-4._broken | led-3._broken | led-2._broken | led-1._broken;INIT (source.current-out = cb-7.current-in)TRANS (next(source.current-out) = next(cb-7.current-in))INIT (cb-7.current-out = cb-6.current-in)TRANS (next(cb-7.current-out) = next(cb-6.current-in))INIT (cb-7.current-out = cb-5.current-in)TRANS (next(cb-7.current-out) = next(cb-5.current-in))INIT (cb-6.current-out = cb-4.current-in)TRANS (next(cb-6.current-out) = next(cb-4.current-in))INIT (cb-6.current-out = cb-3.current-in)TRANS (next(cb-6.current-out) = next(cb-3.current-in))INIT (cb-5.current-out = cb-2.current-in)TRANS (next(cb-5.current-out) = next(cb-2.current-in))INIT (cb-5.current-out = cb-1.current-in)TRANS (next(cb-5.current-out) = next(cb-1.current-in))INIT (cb-4.current-out = led-4.current-in)TRANS (next(cb-4.current-out) = next(led-4.current-in))INIT (cb-3.current-out = led-3.current-in)TRANS (next(cb-3.current-out) = next(led-3.current-in))INIT (cb-2.current-out = led-2.current-in)TRANS (next(cb-2.current-out) = next(led-2.current-in))INIT (cb-1.current-out = led-1.current-in)TRANS (next(cb-1.current-out) = next(led-1.current-in))MODULE mainVAR-- STRUCTURE  cb-model : cb-model;SPEC  (AG 1) & (EF 1)SPEC  EF (cb-model.led-1._state = nominal_)SPEC  EF (cb-model.led-2._state = nominal_)SPEC  EF (cb-model.led-3._state = nominal_)SPEC  EF (cb-model.led-4._state = nominal_)SPEC  EF (cb-model.cb-1._state = on_)SPEC  EF (cb-model.cb-1._state = off_)SPEC  EF (cb-model.cb-1._state = tripped_)SPEC  EF (cb-model.cb-1._state = blown_)SPEC  EF (cb-model.cb-1._state = unknown-cb-fault_)SPEC  EF (cb-model.cb-2._state = on_)SPEC  EF (cb-model.cb-2._state = off_)SPEC  EF (cb-model.cb-2._state = tripped_)SPEC  EF (cb-model.cb-2._state = blown_)SPEC  EF (cb-model.cb-2._state = unknown-cb-fault_)SPEC  EF (cb-model.cb-3._state = on_)SPEC  EF (cb-model.cb-3._state = off_)SPEC  EF (cb-model.cb-3._state = tripped_)SPEC  EF (cb-model.cb-3._state = blown_)SPEC  EF (cb-model.cb-3._state = unknown-cb-fault_)SPEC  EF (cb-model.cb-4._state = on_)SPEC  EF (cb-model.cb-4._state = off_)SPEC  EF (cb-model.cb-4._state = tripped_)SPEC  EF (cb-model.cb-4._state = blown_)SPEC  EF (cb-model.cb-4._state = unknown-cb-fault_)SPEC  EF (cb-model.cb-5._state = on_)SPEC  EF (cb-model.cb-5._state = off_)SPEC  EF (cb-model.cb-5._state = tripped_)SPEC  EF (cb-model.cb-5._state = blown_)SPEC  EF (cb-model.cb-5._state = unknown-cb-fault_)SPEC  EF (cb-model.cb-6._state = on_)SPEC  EF (cb-model.cb-6._state = off_)SPEC  EF (cb-model.cb-6._state = tripped_)SPEC  EF (cb-model.cb-6._state = blown_)SPEC  EF (cb-model.cb-6._state = unknown-cb-fault_)SPEC  EF (cb-model.cb-7._state = on_)SPEC  EF (cb-model.cb-7._state = off_)SPEC  EF (cb-model.cb-7._state = tripped_)SPEC  EF (cb-model.cb-7._state = blown_)SPEC  EF (cb-model.cb-7._state = unknown-cb-fault_)SPEC  EF (cb-model.source._state = nominal_)