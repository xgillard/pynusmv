MODULE main
--
-- Note: this model is not the result of my personal work, it was found online at
-- http://www.cs.ucc.ie/~herbert/CS6320/LAB/SMV/smv%20examples/semaphore.smv
-- Accessed: May 10, 2016
--
-- My only contribution to this model was to replace the occurences of 0 and 1
-- in the model by the constants TRUE and FALSE for which these numbers stand.
-- This allowed the whole model to typecheck using NuSMV.
--
VAR
  semaphore : boolean;
  proc1 : process user(semaphore);
  proc2 : process user(semaphore);
ASSIGN
  init(semaphore) := FALSE;
SPEC
  AG (proc1.state = entering -> AF proc1.state = critical)

MODULE user(semaphore)
VAR
  state : {idle,entering,critical,exiting};
ASSIGN
  init(state) := idle;
  next(state) :=
    case
      state = idle : {idle,entering};
      state = entering & !semaphore : critical;
      state = critical : {critical,exiting};
      state = exiting : idle;
      TRUE : state;
    esac;
  next(semaphore) :=
    case
      state = entering : TRUE;
      state = exiting : FALSE;
      TRUE : semaphore;
    esac;
FAIRNESS
  running
